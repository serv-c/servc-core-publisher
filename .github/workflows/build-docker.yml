jobs:
  build-docker:
    needs: changelog
    runs-on:
    - ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        submodules: true
    - name: Install Git
      run: sudo apt-get update && sudo apt-get install -y git && git config advice.diverging false
    - env:
        ARTIFACT_NAME: serv-c/servc-core-publisher
        NONPROD_REPOSITORY: registry.yusufali.ca
        PROD_REPOSITORY: registry.yusufali.ca
        REF_LONG: ${{ github.ref }}
        REF_SHORT: ${{ github.ref_name }}
      id: get_version
      name: Get Version
      run: |-
        REPO=$NONPROD_REPOSITORY
        CURRENT_VERSION="1.0.0"
        if [[ $REF_LONG == refs/tags/* ]]; then
            CURRENT_VERSION=${REF_LONG#refs/tags/}
            REPO=$PROD_REPOSITORY
        elif [[ $REF_SHORT == "main" ]]; then
            git fetch --prune
            CURRENT_VERSION=$(git describe --tags "$(git rev-list --tags --max-count=1)")
            REPO=$PROD_REPOSITORY
            if [[ -z $CURRENT_VERSION ]]; then
                CURRENT_VERSION="0.1.0"
            fi
        fi

        echo $CURRENT_VERSION
        echo $REPO

        echo artifactname=$ARTIFACT_NAME >> $GITHUB_ENV
        echo repository=$REPO >> $GITHUB_ENV
        echo current_version=$CURRENT_VERSION >> $GITHUB_ENV
    - name: Build and Push
      uses: aevea/action-kaniko@master
      with:
        build_file: Dockerfile
        extra_args: ${{ github.ref_name != 'main' && '--no-push' || ''  }}
        image: ${{ env.artifactname }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        path: .
        registry: ${{ env.repository }}
        tag: latest
        username: ${{ secrets.DOCKER_USERNAME }}
  changelog:
    name: changelog
    runs-on:
    - ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        submodules: true
    - name: Install Git
      run: sudo apt-get update && sudo apt-get install -y git && git config advice.diverging false
    - id: previoustag
      name: Get Latest Tag
      run: |-
        echo ::set-output name=tag::$(git describe --tags "$(git rev-list --tags --max-count=1)")
        echo $(git describe --tags "$(git rev-list --tags --max-count=1)")
    - id: changelog
      if: github.ref_name == 'main'
      name: Generate new Tag
      uses: TriPSs/conventional-changelog-action@v6
      with:
        fallback-version: ${{ steps.previoustag.outputs.tag }}
        git-url: ${{ github.server_url != 'https://github.com' && 'git.yusufali.ca' || 'github.com' }}
        github-token: ${{ github.token }}
        output-file: false
        skip-ci: false
        skip-commit: true
        skip-version-file: true
        tag-prefix: ''
name: build-docker
'on':
  pull_request: {}
  push:
    branches:
    - main
  workflow_dispatch: {}
permissions:
  contents: write
